API Descriptions:

This application provides a RESTful API for Tasks Management BE Assessment.

User Management Endpoints:

1. POST /api/users/register/
   - Description: Create a new user
   - Request Body: email, password, username
   - Authorization HEADER: Not required
   - Response fields:
        {
        "username": "haroff",
        "email": "harof.dev@gmail.com"
        }


2. POST /api/users/login/
   - Description: login user
   - Request Body: username, password
   - Authorization HEADER: Not required
   - Response fields:
        {
        "token": "d77e497215da7f136be30923576933e897f847bf",
        "id": 1
        }

3. GET /api/users/logout
   - Description: logout user
   - Authorization HEADER: Token your_token_value
   - Response fields: Nil


Tasks Management Endpoints:

1. POST /api/tasks/
   - Description: Create a new task
   - Request Body: 
        {
            "title": "Complete Unit Development",
            "description": "Write unit tests for all new features and ensure code coverage is above 90%.",
            "status": "completed",
            "due_date": "2024-08-31"
        }

   - Authorization HEADER: Token your_token_value
   - Response fields: 
        {
            "title": "Complete Unit Development",
            "description": "Write unit tests for all new features and ensure code coverage is above 90%.",
            "status": "completed",
            "due_date": "2024-08-31"
        }

2. GET /api/tasks/
   - Description: List tasks for user
   - Request Body: nil
   - Authorization HEADER: Token your_token_value
   - Response fields: 
        [
            {
                "id": 2,
                "title": "Complete Unit Testing",
                "description": "Write unit tests for all new features and ensure code coverage is above 90%.",
                "status": "pending",
                "due_date": "2024-08-31",
                "created_at": "2024-08-03T15:57:28.790362Z",
                "updated_at": "2024-08-03T15:57:28.790377Z",
                "user": 1
            }
        ]

3. PATCH /api/tasks/:id/
   - Description: Partial Update for task field(s)
   - Request Body: any field(s)
   - Authorization HEADER: Token your_token_value
   - Response fields: 
        {
            "id": 2,
            "title": "Updated task",
            "description": "Write unit tests for all new features and ensure code coverage is above 90%.",
            "status": "pending",
            "due_date": "2024-08-31",
            "created_at": "2024-08-03T15:57:28.790362Z",
            "updated_at": "2024-08-03T16:21:19.841374Z",
            "user": 1
        }

4. DELETE /api/tasks/:id/
   - Description: Delete a task
   - Request Body: nil
   - Authorization HEADER: Token your_token_value
   - Response fields: nil

5. GET /api/tasks/?search=
   - Description: Search for task(s)
   - Request Body: nil
   - Authorization HEADER: Token your_token_value
   - Response fields: list of tasks
   - Search From: title, description

6. GET /api/tasks/?status=
   - Description: Filter for task(s)
   - Request Body: nil
   - Authorization HEADER: Token your_token_value
   - Response fields: list of tasks
   - Filter fields: status, due_date